<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">


    <changeSet id="1_ddl_creatingTables" author="partha">
        <sql>

            CREATE SCHEMA WealthManager;

            CREATE TABLE IF NOT EXISTS WealthManager.DividendMaster(
            id serial primary key,
            symbol VARCHAR(50),
            name VARCHAR(100),
            dividendyear INTEGER,
            quarter INTEGER,
            dividendamount decimal
            );


            CREATE TABLE IF NOT EXISTS WealthManager.AssetMaster
            (
            id serial PRIMARY KEY,
            username varchar(50),
            assetType varchar(30),
            assetName VARCHAR(100),
            amount decimal,
            valuationDate DATE,
            CONSTRAINT uc_am_ExchangeSymbol UNIQUE (username,assetName,valuationDate)
            );


<!--            CREATE TABLE IF NOT EXISTS WealthManager.StockMaster-->
<!--            (-->
<!--            id serial PRIMARY KEY,-->
<!--            exchange VARCHAR(20),-->
<!--            symbol VARCHAR(50),-->
<!--            name VARCHAR(100),-->
<!--            isinNumber VARCHAR(50),-->
<!--            faceValue decimal,-->
<!--            listingDate DATE,-->
<!--            key VARCHAR(50),-->
<!--            CONSTRAINT uc_sm_ExchangeSymbol UNIQUE (exchange,symbol)-->
<!--            );-->


<!--            CREATE TABLE IF NOT EXISTS WealthManager.StockPriceMaster-->
<!--            (-->
<!--            id serial PRIMARY KEY,-->
<!--            stockMasterId INTEGER,-->
<!--            stockKey VARCHAR(50),-->
<!--            price decimal,-->
<!--            priceTime timestamp,-->
<!--            timeZoneName VARCHAR(20)-->
<!--            );-->


            CREATE TABLE IF NOT EXISTS WealthManager.DailyPriceMaster (
            id serial4 NOT NULL,
            PriceDate date NOT NULL,
            key varchar(50) NOT NULL,
            AdjClosePrice numeric NULL,
            ClosePrice numeric NULL,
            OpenPrice numeric null,
            High numeric NULL,
            Low numeric NULL,
            Volume numeric null,
            CreateTime  TIMESTAMP null,
            CONSTRAINT uc_dpm_ExchangeSymbol UNIQUE (PriceDate,key),
            primary key (id, PriceDate, key)
            ) partition by range (PriceDate);

            CREATE TABLE IF NOT EXISTS WealthManager.DailyPriceMaster_2010 PARTITION OF WealthManager.DailyPriceMaster for values from ('2010-01-01') to ('2011-01-01');
            CREATE TABLE IF NOT EXISTS WealthManager.DailyPriceMaster_2011 PARTITION OF WealthManager.DailyPriceMaster for values from ('2011-01-01') to ('2012-01-01');
            CREATE TABLE IF NOT EXISTS WealthManager.DailyPriceMaster_2012 PARTITION OF WealthManager.DailyPriceMaster for values from ('2012-01-01') to ('2013-01-01');
            CREATE TABLE IF NOT EXISTS WealthManager.DailyPriceMaster_2013 PARTITION OF WealthManager.DailyPriceMaster for values from ('2013-01-01') to ('2014-01-01');
            CREATE TABLE IF NOT EXISTS WealthManager.DailyPriceMaster_2014 PARTITION OF WealthManager.DailyPriceMaster for values from ('2014-01-01') to ('2015-01-01');
            CREATE TABLE IF NOT EXISTS WealthManager.DailyPriceMaster_2015 PARTITION OF WealthManager.DailyPriceMaster for values from ('2015-01-01') to ('2016-01-01');
            CREATE TABLE IF NOT EXISTS WealthManager.DailyPriceMaster_2016 PARTITION OF WealthManager.DailyPriceMaster for values from ('2016-01-01') to ('2017-01-01');
            CREATE TABLE IF NOT EXISTS WealthManager.DailyPriceMaster_2017 PARTITION OF WealthManager.DailyPriceMaster for values from ('2017-01-01') to ('2018-01-01');
            CREATE TABLE IF NOT EXISTS WealthManager.DailyPriceMaster_2018 PARTITION OF WealthManager.DailyPriceMaster for values from ('2018-01-01') to ('2019-01-01');
            CREATE TABLE IF NOT EXISTS WealthManager.DailyPriceMaster_2019 PARTITION OF WealthManager.DailyPriceMaster for values from ('2019-01-01') to ('2020-01-01');
            CREATE TABLE IF NOT EXISTS WealthManager.DailyPriceMaster_2020 PARTITION OF WealthManager.DailyPriceMaster for values from ('2020-01-01') to ('2021-01-01');
            CREATE TABLE IF NOT EXISTS WealthManager.DailyPriceMaster_2021 PARTITION OF WealthManager.DailyPriceMaster for values from ('2021-01-01') to ('2022-01-01');
            CREATE TABLE IF NOT EXISTS WealthManager.DailyPriceMaster_2022 PARTITION OF WealthManager.DailyPriceMaster for values from ('2022-01-01') to ('2023-01-01');
            CREATE TABLE IF NOT EXISTS WealthManager.DailyPriceMaster_2023 PARTITION OF WealthManager.DailyPriceMaster for values from ('2023-01-01') to ('2024-01-01');
            CREATE TABLE IF NOT EXISTS WealthManager.DailyPriceMaster_2024 PARTITION OF WealthManager.DailyPriceMaster for values from ('2024-01-01') to ('2025-01-01');
            CREATE TABLE IF NOT EXISTS WealthManager.DailyPriceMaster_2025 PARTITION OF WealthManager.DailyPriceMaster for values from ('2025-01-01') to ('2026-01-01');


<!--            &#45;&#45; instrumentType = equity, index, commodity, crypt,  derivative , etc-->
<!--            &#45;&#45; key for equity = EQUITY:EXCHANGE_SYMBOL-->
<!--            &#45;&#45; key for index = IDX:INDEXSYMBOL-->
            CREATE TABLE WealthManager.InstrumentMaster (
                id serial4 NOT NULL,
                instrumentType text NOT NULL,
                "name" varchar(255) NOT NULL,
                exchange varchar(255) NULL,
                key varchar(255) NOT NULL,
                symbol varchar(255) NULL,
                isin varchar(50) NULL,
                facevalue float8 NULL,
                listingDate timestamp(6) NULL,
                yahooFinanceTicker text NULL,
                sourceName text NULL,
                createdDate timestamp(6) NULL,
                CONSTRAINT uc_instrumentMaster_key UNIQUE (key),
                CONSTRAINT indexInstrumentMaster_pkey PRIMARY KEY (id)
            )


        </sql>
    </changeSet>

</databaseChangeLog>