package org.partha.wmservice.controllers;

import com.fasterxml.jackson.core.JsonProcessingException;
import io.swagger.v3.oas.annotations.Operation;
import org.partha.wmcommon.entities.Instrument;
import org.partha.wmcommon.enums.InstrumentType;
import org.partha.wmcommon.request.ChartDataRequest;
import org.partha.wmcommon.request.DownloadDailyDataRequest;
import org.partha.wmcommon.response.InstrumentDataDownloadResponseDto;
import org.partha.wmservice.service.domain.InstrumentService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/instruments")
public class InstrumentController {

    @Autowired
    InstrumentService instrumentService;

    @Operation(summary = "download daily data for a given yfinancy ticker",
            description = "download daily data for a given yfinance ticker and stores in the table wealthmanager.dailypricemaster d. SamplePayload: {\"key\":\"EQUITY:NSE:ITC\",\"ticker\":\"ITC.NS\",\"recordsFetched\":1379,\"recordsInserted\":1379}")
    @PostMapping("/downloadInstrumentDailyData")
    public InstrumentDataDownloadResponseDto downloadInstrumentDailyData(@RequestBody DownloadDailyDataRequest request) {
        return instrumentService.downloadInstrumentDailyData(request);
    }



    @Operation(summary = "gets instrument keys by type",
            description = "gets instrument keys by type i.e. EQUITY/INDEX/COMMODITY")
    @GetMapping("/instrumentKeysByType")
    public List<String> getInstrumenKeysByType(@RequestParam(name = "InstrumentType") InstrumentType instrumentType){
        return instrumentService.getInstrumentKeys(instrumentType);
    }

    @GetMapping("/instrumentsByType")
    public List<Instrument> getInstrumentsByType(@RequestParam(name = "InstrumentType") InstrumentType instrumentType){
        return instrumentService.getInstrumentsByType(instrumentType);
    }




    @Operation(summary = "download index daily data",
            description = "downloads all index daily data since 2010 and stores in dailyPriceMaster table ")
    @GetMapping("/downloadIndexData")
    public List<InstrumentDataDownloadResponseDto> downloadIndexDailData() throws JsonProcessingException {
        return instrumentService.downloadIndexDailyData();
    }


    @Operation(summary = "export dailyPriceMaster data to csv",
            description = "export dailyPriceMaster data to csv to keep backeup and import later. example-filepath: C:\\Users\\partha\\test.csv")
    @GetMapping("/exportInstrumentDailyData")
    public ResponseEntity exportInstrumentDailyData(@RequestParam("filepath") String filepath){
        instrumentService.exportInstrumentDailyData(filepath);
        return new ResponseEntity(HttpStatus.OK);
    }

    @Operation(summary = "import csv data generated by /exportInstrumentDailyData API to dailyPriceMaster",
            description = "this api is used to generate the data exported to csv using the /exportInstrumentDailyData api")
    @GetMapping("/importInstrumentDailyData")
    public ResponseEntity importInstrumentDailyData(@RequestParam("filepath") String filepath){
        instrumentService.importInstrumentDailyData(filepath);
        return new ResponseEntity(HttpStatus.OK);
    }

    @PostMapping("/getTechnicalChartDate")
    public String getTechnicalChartData(@RequestBody ChartDataRequest request) throws JsonProcessingException {
        return instrumentService.getTechnicalChartData(request);
    }
}
